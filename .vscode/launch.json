{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
    {
        "name": "main",
        "type": "cppdbg", // c/c++ debugging
        "request": "launch", // launch or attach
        "args": ["4", "300", "200", "200"], // arguments to the program
        "stopAtEntry": true, // break at main?
        // "osx": {
        //     "cwd": "${workspaceFolder}/${env:PROJ_DIR}", // working directory of the target
        //     "MIMode": "lldb",
        //     "program": "${workspaceFolder}/${env:PROJ_DIR}/${env:EXEC_NAME}", // name of target to run
        // },
        "linux": {
            "cwd": "${workspaceFolder}/${env:PROJ_DIR}", // working directory of the target
            "program": "${workspaceFolder}/${env:PROJ_DIR}/${env:EXEC_NAME}", // name of target to run
            "MIMode": "gdb"

        },
		"setupCommands":[
			{
				"description": "Follow child process instead of parent process after fork",
				"text": "set follow-fork-mode child",
				"ignoreFailures": false
			},
			{
				"description": "After fork, both parent and child processess remain being debugged.",
				"text": "set detach-on-fork off",
				"ignoreFailures": false
			},
		],
        "externalConsole": false, // launch a new console?
        "preLaunchTask": "debug", // name of task to run before this
        // "environment": [
            //     {"name": "env_name", "value": "env_value"},
            // ],
        // "targetArchitecture": "x86_64" // most likely x86_64 or arm64
    },
	{
		"name": "ceedlingExplorer",
		"type": "cppdbg",
		"request": "launch",
		"program": "${workspaceFolder}/${env:PROJ_DIR}/build/test/out/${command:ceedlingExplorer.debugTestExecutable}",
		"args": [],
		"stopAtEntry": false,
		"cwd": "${workspaceFolder}/${env:PROJ_DIR}/",
		"environment": [],
		"externalConsole": false,
		"MIMode": "gdb",
		"miDebuggerPath": "/usr/bin/gdb",
		"setupCommands": [
			{
				"description": "Enable pretty-printing for gdb",
				"text": "-enable-pretty-printing",
				"ignoreFailures": true
			}
		],
	// 	"debugConfiguration": {
	// 		"description": "Debug configuration to run during test debug.",
	// 		"type": "string",
	// 		"scope": "resource"
	// 	  },
	// 	"problemMatching": {
	// 		"mode": "gcc"
	// 	}
	}
	]
}
